
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CompromissoWS", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CompromissoWS {


    /**
     * 
     * @return
     *     returns java.util.List<services.Compromisso>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarCompromissos", targetNamespace = "http://services/", className = "services.ListarCompromissos")
    @ResponseWrapper(localName = "listarCompromissosResponse", targetNamespace = "http://services/", className = "services.ListarCompromissosResponse")
    @Action(input = "http://services/CompromissoWS/listarCompromissosRequest", output = "http://services/CompromissoWS/listarCompromissosResponse")
    public List<Compromisso> listarCompromissos();

    /**
     * 
     * @param dataFim
     * @param idcompromisso
     * @param idlocal
     * @param dataInicio
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "alterarCompromisso", targetNamespace = "http://services/", className = "services.AlterarCompromisso")
    @ResponseWrapper(localName = "alterarCompromissoResponse", targetNamespace = "http://services/", className = "services.AlterarCompromissoResponse")
    @Action(input = "http://services/CompromissoWS/alterarCompromissoRequest", output = "http://services/CompromissoWS/alterarCompromissoResponse")
    public boolean alterarCompromisso(
        @WebParam(name = "idcompromisso", targetNamespace = "")
        long idcompromisso,
        @WebParam(name = "dataInicio", targetNamespace = "")
        String dataInicio,
        @WebParam(name = "dataFim", targetNamespace = "")
        String dataFim,
        @WebParam(name = "idlocal", targetNamespace = "")
        long idlocal);

    /**
     * 
     * @param idlocal
     * @return
     *     returns java.util.List<services.Compromisso>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "compromissoPorLocal", targetNamespace = "http://services/", className = "services.CompromissoPorLocal")
    @ResponseWrapper(localName = "compromissoPorLocalResponse", targetNamespace = "http://services/", className = "services.CompromissoPorLocalResponse")
    @Action(input = "http://services/CompromissoWS/compromissoPorLocalRequest", output = "http://services/CompromissoWS/compromissoPorLocalResponse")
    public List<Compromisso> compromissoPorLocal(
        @WebParam(name = "idlocal", targetNamespace = "")
        long idlocal);

    /**
     * 
     * @param idcontato
     * @return
     *     returns java.util.List<services.Compromisso>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "compromissoPorContato", targetNamespace = "http://services/", className = "services.CompromissoPorContato")
    @ResponseWrapper(localName = "compromissoPorContatoResponse", targetNamespace = "http://services/", className = "services.CompromissoPorContatoResponse")
    @Action(input = "http://services/CompromissoWS/compromissoPorContatoRequest", output = "http://services/CompromissoWS/compromissoPorContatoResponse")
    public List<Compromisso> compromissoPorContato(
        @WebParam(name = "idcontato", targetNamespace = "")
        long idcontato);

    /**
     * 
     * @param idcompromisso
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "excluirCompromisso", targetNamespace = "http://services/", className = "services.ExcluirCompromisso")
    @ResponseWrapper(localName = "excluirCompromissoResponse", targetNamespace = "http://services/", className = "services.ExcluirCompromissoResponse")
    @Action(input = "http://services/CompromissoWS/excluirCompromissoRequest", output = "http://services/CompromissoWS/excluirCompromissoResponse")
    public boolean excluirCompromisso(
        @WebParam(name = "idcompromisso", targetNamespace = "")
        long idcompromisso);

    /**
     * 
     * @param idcompromisso
     * @return
     *     returns services.Compromisso
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "compromissoPorID", targetNamespace = "http://services/", className = "services.CompromissoPorID")
    @ResponseWrapper(localName = "compromissoPorIDResponse", targetNamespace = "http://services/", className = "services.CompromissoPorIDResponse")
    @Action(input = "http://services/CompromissoWS/compromissoPorIDRequest", output = "http://services/CompromissoWS/compromissoPorIDResponse")
    public Compromisso compromissoPorID(
        @WebParam(name = "idcompromisso", targetNamespace = "")
        long idcompromisso);

    /**
     * 
     * @param dataFim
     * @param idlocal
     * @param dataInicio
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "criarCompromisso", targetNamespace = "http://services/", className = "services.CriarCompromisso")
    @ResponseWrapper(localName = "criarCompromissoResponse", targetNamespace = "http://services/", className = "services.CriarCompromissoResponse")
    @Action(input = "http://services/CompromissoWS/criarCompromissoRequest", output = "http://services/CompromissoWS/criarCompromissoResponse")
    public boolean criarCompromisso(
        @WebParam(name = "dataInicio", targetNamespace = "")
        String dataInicio,
        @WebParam(name = "dataFim", targetNamespace = "")
        String dataFim,
        @WebParam(name = "idlocal", targetNamespace = "")
        long idlocal);

}
